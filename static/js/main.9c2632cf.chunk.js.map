{"version":3,"sources":["api/httpClient.js","api/restProvider.js","api/authClient.js","redux/types.js","redux/reducers/index.js","redux/reducers/app.js","redux/reducers/ui.js","api/app.js","redux/sagas/index.js","redux/actions.js","components/BulkActions/SetStatusAction.js","components/EmailForm.js","components/BulkActions/SendMessageAction.js","components/AppTitle.js","components/MyMenu.js","components/MyDialog.js","components/MyLayout.js","components/WithEvent.js","customRoutes.js","endpoints/companies/filters/CompanyData.js","endpoints/companies/filters/Admin.js","endpoints/companies/ConditionalField.js","components/BulkActions/Admins.js","endpoints/companies/actions/SelectAdminField.js","endpoints/companies/actions/Flagswitch.js","endpoints/companies/actions/BulkAssignAdmin.js","endpoints/companies/List.js","styles/statuses.js","endpoints/purchases/PurchaseStatusField.js","endpoints/companies/ShowTitle.js","endpoints/companies/ShowActions.js","endpoints/companies/Show.js","endpoints/purchases/List.js","endpoints/participants/FilterByTicketId.js","endpoints/participants/ListFilters.js","endpoints/participants/List.js","endpoints/participants/ShowTitle.js","endpoints/participants/Show.js","endpoints/tickets/RelatedParticipants.js","endpoints/tickets/Filters.js","endpoints/tickets/TicketTags.js","endpoints/tickets/List.js","endpoints/tickets/Edit.js","endpoints/ticketgroups/List.js","endpoints/groups/ActiveEvent.js","endpoints/groups/RelatedEvents.js","endpoints/groups/List.js","endpoints/groups/Show.js","endpoints/events/actions/ChangeAppScope.js","endpoints/events/FilterByGroupId.js","endpoints/events/ListFilters.js","endpoints/events/actions/SelectAll.js","endpoints/events/ActiveEvent.js","endpoints/events/List.js","endpoints/events/actions/ChangeActiveEventButton.js","endpoints/events/Show.js","endpoints/companydata/Edit.js","endpoints/companydata/Show.js","endpoints/fields/Edit.js","endpoints/messages/FilterByUserId.js","endpoints/messages/List.js","endpoints/messages/Show.js","App.js","registerServiceWorker.js","index.js"],"names":["dataProvider","apiUrl","httpClient","arguments","length","undefined","fetchUtils","fetchJson","type","resource","params","UPDATE_MANY","Promise","all","ids","map","id","concat","method","body","JSON","stringify","data","then","responses","response","json","DELETE_MANY","_convertDataRequestTo","url","options","GET_LIST","_params$pagination","pagination","page","perPage","_params$sort","sort","field","order","query","Object","objectSpread","flattenObject","filter","_sort","_order","_page","_perPage","strictNullHandling","GET_ONE","GET_MANY_REFERENCE","_objectSpread2","_params$pagination2","_params$sort2","defineProperty","target","UPDATE","CREATE","DELETE","GET_MANY","join","Error","convertDataRequestToHTTP","headers","has","total","parseInt","get","split","pop","meta","convertHTTPResponse","restProvider","process","Headers","Accept","token","localStorage","getItem","set","authClient","AUTH_GET_PERMISSIONS","AUTH_LOGIN","username","password","formData","FormData","append","request","Request","fetch","status","statusText","_ref","access_token","console","log","setItem","AUTH_LOGOUT","removeItem","resolve","AUTH_ERROR","reject","AUTH_CHECK","CHANGE_EVENT","reducers","app","previousState","event","message","subject","text","action","payload","ui","dialog","lsGet","key","item","parse","error","statuses","name","roles","setActiveEvent","value","activeEventId","changeEvent","getAdminsWhen","appSaga","actionData","regenerator_default","a","wrap","_context","prev","next","call","stop","_marked","this","_context2","put","crudGetList","event_id","_marked2","_context3","takeEvery","CRUD_GET_LIST_SUCCESS","_marked3","sagas","Types","showDialog","hideDialog","SetStatusAction","handleDialogClose","_this","props","onExit","handleConfirm","_this$props","basePath","crudUpdateMany","selectedIds","views","react_default","createElement","Button","label","onClick","Forward_default","Component","connect","EmailForm","classCallCheck","possibleConstructorReturn","getPrototypeOf","handleChange","templates","setState","state","senderName","senderEmail","template_id","onChange","debounce","createMessage","prevProps","_this$state","rest","objectWithoutProperties","_this$props$templates","list","Array","isArray","MenuItem_default","FormControl_default","InputLabel_default","htmlFor","Select_default","TextField_default","fullWidth","margin","multiline","rows","rowsMax","defaultProps","admin","resources","SendMessageAction","onQuit","crudCreate","showNotification","_this$props2","title","content","components_EmailForm","onConfirm","onClose","Email_default","AppTitle","activeEvent","dispatch","Menu","assign","Confirm","isOpen","_classnames","confirm","cancel","confirmColor","classes","Dialog_default","open","aria-labelledby","DialogTitle_default","DialogContent_default","DialogActions_default","Button_default","className","classnames","confirmWarning","confirmPrimary","autoFocus","CheckCircle_default","iconPaddingStyle","ErrorOutline_default","enhance","compose","withStyles","theme","color","palette","primary","main","&:hover","backgroundColor","fade","@media (hover: none)","paddingRight","translate","MyLayout","Fragment","Layout","menu","MyMenu","MyDialog","WithEvent","children","React","refreshView","customRoutes","CompanyData","SelectArrayInput","choices","Admin","admins","fname","lname","source","SelectInput","buildChoices","ConditionalField","record","sources","find","indexOf","ImageField","logotype","field_TextField","addLabel","border","textAlign","& img","maxWidth","maxHeight","fontWeigth","minHeight","Admins","selected","List_default","root","ListItem_default","button","Avatar_default","ListItemText_default","secondary","width","background","paper","styles","avatar","cursor","adminNotSet","adminSet","deepOrange","SelectAdminField","changeCompanyAdmin","admin_id","showAction","slug","BulkActions_Admins","_classNames","_this$props3","classNames","refresh","Flagswitch","changeResourceFlag","checkedValue","unCheckedValue","checked","Switch_default","BulkAssignAdmin","bulkChangeCompanyAdmin","handleDialog","SupervisorAccount_default","unselectAll","CustomBulkActions","BulkActions_SendMessageAction","actions_BulkAssignAdmin","Filters","Filter","BooleanInput","alwaysOn","TextInput","filters_CompanyData","filters_Admin","customColumns","ViewList","List","filters","List_Filters","filterDefaultValues","present","featured","bulkActionButtons","List_CustomBulkActions","Datagrid","actions_Flagswitch","actions_SelectAdminField","FunctionField","sortBy","render","event_ids","button_ShowButton","ok","hold","new","cancelled","icon","highlight","PurchaseStatusField","handleClick","control","handleStatusChange","catch","e","handleClose","_ref2","_ref3","Chip_default","clickable","Edit_default","ShowTitle","cardActionStyle","zIndex","display","float","ShowActions","CardActions","style","EditButton","RefreshButton","ListButton","Roles","uniqueValues","arr","toConsumableArray","Set","role","ViewShow","Show","actions","companies_ShowActions","companies_ShowTitle","TabbedShowLayout","Tab","Show_Roles","ReferenceManyField","reference","DateField","path","ArrayField","purchases_PurchaseStatusField","NumberField","defaultValue","BulkActions_SetStatusAction","ShowParticipantButton","participant_id","components_WithEvent","purchases_List_CustomBulkActions","purchases_List_Filters","showTime","ReferenceField","linkType","ChipField","sortable","List_ShowParticipantButton","FilterByTicketId","_this$props$tickets","tickets","allowEmpty","buildTicketList","participants_FilterByTicketId","ListFilters","participants_List_CustomBulkActions","ReferenceArrayField","SingleFieldList","DeleteButton","email","MyPurchaseStatusField","participants_ShowTitle","participants_Show_Roles","Show_MyPurchaseStatusField","ShowButton","_ref$label","_ref$record","component","Link","to","pathname","search","ticket_id","RemoveRedEye_default","TicketTags","tags","tickets_Filters","tickets_TicketTags","RelatedParticipants","Title","redirect","company_id","TicketEdit","detail_Edit","Edit_Title","SimpleForm","TagsField","BoothColorField","booth","bgcolor","fontcolor","List_BoothColorField","List_TagsField","SimpleList","primaryText","secondaryText","start","end","tertiaryText","price","limit","ActiveEvent","active_event","RelatedEvents","group_id","groups_List_CustomBulkActions","groups_ActiveEvent","groups_RelatedEvents","Show_Title","SimpleShowLayout","ChangeAppScopeForEvent","labelSelected","disabled","variant","showNotificationAction","refreshViewAction","FilterByGroupId","_this$props$groups","groups","events_FilterByGroupId","SelectAll","groupId","alert","is_active","active","notActive","fontWeight","actions_SelectAll","events_ListFilters","events_List_CustomBulkActions","events_ActiveEvent","ChangeAppScope","ChangeActiveEventButton","active_event_id","Actions","CardActions_default","events_Show_Title","Show_Actions","companydata_Edit_Title","companydata_Show_Title","fields_Edit_Title","FilterByUserId","messages_List_Filters","messages_List_CustomBulkActions","ProfileFields","messages_Show_Title","messages_Show_Roles","Show_ProfileFields","canAccess","permissions","App","esm_Admin","appLayout","customReducers","customSagas","authProvider","initialState","Resource","PurchaseList","ParticipantList","show","ParticipantShow","CompanyList","CompanyShow","TicketList","edit","TicketGroupList","GroupList","GroupShow","MessagesList","MessagesShow","FieldsEdit","CompanyDataEdit","CompanyDataShow","EventList","EventShow","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","ReactDOM","src_App","document","getElementById","URL","origin","addEventListener","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.9c2632cf.chunk.js","sourcesContent":["import { fetchUtils } from 'react-admin';\nimport restProvider from './restProvider';\n\nconst httpClient = (url, options) => {\n  if (!options.headers) {\n    options.headers = new Headers({\n      Accept: 'application/json'\n    });\n  }\n  const token = localStorage.getItem('token');\n  options.headers.set('Authorization', `Bearer ${token}`);\n  return fetchUtils.fetchJson(url, options);\n};\n\nconst dataProvider = restProvider(\n  process.env.REACT_APP_API_ENDPOINT,\n  httpClient\n);\n\nexport default dataProvider;\n","import { stringify } from 'qs';\nimport {\n  fetchUtils,\n  GET_LIST,\n  GET_ONE,\n  GET_MANY,\n  GET_MANY_REFERENCE,\n  CREATE,\n  UPDATE,\n  UPDATE_MANY,\n  DELETE,\n  DELETE_MANY\n} from 'react-admin';\n\n/**\n * Maps react-admin queries to a json-server powered REST API\n *\n * @see https://github.com/typicode/json-server\n * @example\n * GET_LIST     => GET http://my.api.url/posts?_sort=title&_order=ASC&_start=0&_end=24\n * GET_ONE      => GET http://my.api.url/posts/123\n * GET_MANY     => GET http://my.api.url/posts/123, GET http://my.api.url/posts/456, GET http://my.api.url/posts/789\n * UPDATE       => PUT http://my.api.url/posts/123\n * CREATE       => POST http://my.api.url/posts/123\n * DELETE       => DELETE http://my.api.url/posts/123\n */\nexport default (apiUrl, httpClient = fetchUtils.fetchJson) => {\n  /**\n   * @param {String} type One of the constants appearing at the top if this file, e.g. 'UPDATE'\n   * @param {String} resource Name of the resource to fetch, e.g. 'posts'\n   * @param {Object} params The data request params, depending on the type\n   * @returns {Object} { url, options } The HTTP request parameters\n   */\n  const convertDataRequestToHTTP = (type, resource, params) => {\n    let url = '';\n    const options = {};\n    switch (type) {\n      case GET_LIST: {\n        const { page, perPage } = params.pagination;\n        const { field, order } = params.sort;\n        const query = {\n          ...fetchUtils.flattenObject(params.filter),\n\n          _sort: field,\n          _order: order,\n          _page: page,\n          _perPage: perPage\n          //_start: (page - 1) * perPage,\n          //_end: page * perPage,\n        };\n        url = `${apiUrl}/${resource}?${stringify(query, {\n          strictNullHandling: true\n        })}`;\n        break;\n      }\n      case GET_ONE:\n        url = `${apiUrl}/${resource}/${params.id}`;\n        break;\n      case GET_MANY_REFERENCE: {\n        const { page, perPage } = params.pagination;\n        const { field, order } = params.sort;\n        const query = {\n          ...fetchUtils.flattenObject(params.filter),\n          [params.target]: params.id,\n          _sort: field,\n          _order: order,\n          _page: page,\n          _perPage: perPage\n          //_start: (page - 1) * perPage,\n          //_end: page * perPage,\n        };\n        url = `${apiUrl}/${resource}?${stringify(query, {\n          strictNullHandling: true\n        })}`;\n        break;\n      }\n      case UPDATE:\n        url = `${apiUrl}/${resource}/${params.id}`;\n        options.method = 'PUT';\n        options.body = JSON.stringify(params.data);\n        break;\n      case CREATE:\n        url = `${apiUrl}/${resource}`;\n        options.method = 'POST';\n        options.body = JSON.stringify(params.data);\n        break;\n      case DELETE:\n        url = `${apiUrl}/${resource}/${params.id}`;\n        options.method = 'DELETE';\n        break;\n      case GET_MANY: {\n        //we allow only > 1 related ids....\n        const query = {\n          [`id_like`]: params.ids.filter(id => id).join('|')\n        };\n        url = `${apiUrl}/${resource}?${stringify(query, {\n          strictNullHandling: true\n        })}`;\n        break;\n      }\n      default:\n        throw new Error(`Unsupported fetch action type ${type}`);\n    }\n    return { url, options };\n  };\n\n  /**\n   * @param {Object} response HTTP response from fetch()\n   * @param {String} type One of the constants appearing at the top if this file, e.g. 'UPDATE'\n   * @param {String} resource Name of the resource to fetch, e.g. 'posts'\n   * @param {Object} params The data request params, depending on the type\n   * @returns {Object} Data response\n   */\n  const convertHTTPResponse = (response, type, resource, params) => {\n    const { headers, json } = response;\n    switch (type) {\n      case GET_LIST:\n      case GET_MANY_REFERENCE:\n        if (!headers.has('x-total-count')) {\n          throw new Error(\n            'The X-Total-Count header is missing in the HTTP Response. The jsonServer Data Provider expects responses for lists of resources to contain this header with the total number of results to build the pagination. If you are using CORS, did you declare X-Total-Count in the Access-Control-Expose-Headers header?'\n          );\n        }\n        return {\n          data: json.data,\n          total: parseInt(\n            headers\n              .get('x-total-count')\n              .split('/')\n              .pop(),\n            10\n          ),\n          meta: 'meta' in json ? json.meta : []\n        };\n      case CREATE:\n        return { data: { ...params.data, id: json.id } };\n      default:\n        return { data: json.data };\n    }\n  };\n\n  /**\n   * @param {string} type Request type, e.g GET_LIST\n   * @param {string} resource Resource name, e.g. \"posts\"\n   * @param {Object} payload Request parameters. Depends on the request type\n   * @returns {Promise} the Promise for a data response\n   */\n  return (type, resource, params) => {\n    // json-server doesn't handle filters on UPDATE route, so we fallback to calling UPDATE n times instead\n    if (type === UPDATE_MANY) {\n      return Promise.all(\n        params.ids.map(id =>\n          httpClient(`${apiUrl}/${resource}/${id}`, {\n            method: 'PATCH',\n            body: JSON.stringify(params.data)\n          })\n        )\n      ).then(responses => ({\n        data: responses.map(response => response.json)\n      }));\n    }\n    // json-server doesn't handle filters on DELETE route, so we fallback to calling DELETE n times instead\n    if (type === DELETE_MANY) {\n      return Promise.all(\n        params.ids.map(id =>\n          httpClient(`${apiUrl}/${resource}/${id}`, {\n            method: 'DELETE'\n          })\n        )\n      ).then(responses => ({\n        data: responses.map(response => response.json)\n      }));\n    }\n    const { url, options } = convertDataRequestToHTTP(type, resource, params);\n    return httpClient(url, options).then(response =>\n      convertHTTPResponse(response, type, resource, params)\n    );\n  };\n};\n","import {\n  AUTH_LOGIN,\n  AUTH_LOGOUT,\n  AUTH_ERROR,\n  AUTH_CHECK,\n  AUTH_GET_PERMISSIONS\n} from 'react-admin';\n\nexport default (type, params) => {\n  if (type === AUTH_GET_PERMISSIONS) {\n  }\n\n  if (type === AUTH_LOGIN) {\n    const { username, password } = params;\n\n    const formData = new FormData();\n    formData.append('client_id', process.env.REACT_APP_OAUTH_CLIENT_ID);\n    formData.append('grant_type', process.env.REACT_APP_OAUTH_GRANT_TYPE);\n    formData.append('scope', process.env.REACT_APP_OAUTH_SCOPE);\n    formData.append('username', username);\n    formData.append('password', password);\n\n    const request = new Request(process.env.REACT_APP_OAUTH_TOKEN_URL, {\n      method: 'POST',\n      body: formData\n\n      // headers: new Headers({ 'Content-Type': 'application/json' }),\n    });\n\n    return fetch(request)\n      .then(response => {\n        if (response.status < 200 || response.status >= 300) {\n          throw new Error(response.statusText);\n        }\n        return response.json();\n      })\n      .then(({ access_token }) => {\n        console.log(access_token);\n\n        localStorage.setItem('token', access_token);\n      });\n  }\n\n  if (type === AUTH_LOGOUT) {\n    localStorage.removeItem('token');\n    return Promise.resolve();\n  }\n\n  if (type === AUTH_ERROR) {\n    const status = params.status;\n    if (status === 401 || status === 403) {\n      localStorage.removeItem('token');\n      return Promise.reject();\n    }\n    return Promise.resolve();\n  }\n\n  if (type === AUTH_CHECK) {\n    const { resource } = params;\n    return localStorage.getItem('token') ? Promise.resolve() : Promise.reject();\n  }\n\n  if (type === AUTH_GET_PERMISSIONS) {\n    return Promise.resolve();\n  }\n\n  return Promise.reject('Unkown method');\n};\n","export const CHANGE_EVENT = 'EJ/CHANGE_EVENT';\nexport const MESSAGE_CREATE = 'EJ/MESSAGE_CREATE';\nexport const DIALOG_SHOW = 'EJ/DIALOG_SHOW';\nexport const DIALOG_HIDE = 'EJ/DIALOG_HIDE';\nexport const CHANGE_COMPANY_ADMIN = 'EJ/CHANGE_COMPANY_ADMIN';\nexport const BULK_CHANGE_COMPANY_ADMIN = 'EJ/BULK_CHANGE_COMPANY_ADMIN';\nexport const CHANGE_RESOURCE_FLAG = 'EJ/CHANGE_RESOURCE_FLAG';\n","import { default as app } from './app';\nimport { default as ui } from './ui';\n\nexport default { app, ui };\n","import { CHANGE_EVENT, MESSAGE_CREATE } from '../types';\n//import { lsGet } from '../../api/app';\n\nexport default (\n  previousState = {\n    event: {},\n    message: {\n      subject: '',\n      text: ''\n    }\n  },\n  action\n) => {\n  switch (action.type) {\n    case CHANGE_EVENT:\n      return { ...previousState, event: action.payload };\n\n    case MESSAGE_CREATE:\n      return { ...previousState, message: action.payload };\n\n    default:\n      return previousState;\n  }\n};\n","import { DIALOG_HIDE, DIALOG_SHOW } from '../types';\n\nexport default (\n  previousState = {\n    dialog: {}\n  },\n  action\n) => {\n  switch (action.type) {\n    case DIALOG_SHOW:\n      return { ...previousState, dialog: action.payload };\n\n    case DIALOG_HIDE:\n      return { ...previousState, dialog: {} };\n\n    default:\n      return previousState;\n  }\n};\n","import get from 'lodash/get';\n\nexport const uniqueValues = arr => [...new Set(uniqueValues)];\n\nexport const lsGet = key => {\n  const item = localStorage.getItem(key);\n\n  try {\n    return JSON.parse(item);\n  } catch (error) {\n    return null;\n  }\n};\n\nexport const statuses = [\n  { id: 'new', name: 'NEW' },\n  { id: 'hold', name: 'HOLD' },\n  { id: 'ok', name: 'OK' },\n  { id: 'cancelled', name: 'CANCELLED' }\n];\n\nexport const roles = [\n  { id: 'visitor', name: 'visitor' },\n  { id: 'exhibitor', name: 'exhibitor' },\n  { id: 'presenter', name: 'presenter' },\n  { id: 'contestant', name: 'contestant' },\n  { id: 'representative', name: 'representative' }\n];\n\nexport const lsSet = (key, value) =>\n  localStorage.setItem(key, JSON.stringify(value));\n\nexport const setActiveEvent = event => lsSet('activeEvent', event);\nexport const activeEventId = () => get(lsGet('activeEvent'), 'id', 0);\n\nexport const getEventName = () =>\n  get(lsGet('activeEvent'), 'name', '-- no event set --');\n\nexport default activeEventId;\n","import { call, put, takeEvery, all } from 'redux-saga/effects';\n\nimport { setActiveEvent } from '../../api/app';\nimport { CHANGE_EVENT } from '../types';\nimport activeEventId from '../../api/app';\n\nimport { CRUD_GET_LIST_SUCCESS, crudGetList } from 'react-admin';\n\nfunction* changeEvent(actionData) {\n  yield call(setActiveEvent, actionData.payload);\n}\n\nfunction* getAdminsWhen(action) {\n  const { meta } = action;\n  if (meta.resource === 'companies') {\n    yield put(\n      crudGetList(\n        'admins',\n        { page: 1, perPage: 1000 },\n        { field: 'id', order: 'ASC' },\n        { event_id: activeEventId() }\n      )\n    );\n  }\n}\n\nfunction* appSaga() {\n  yield all([takeEvery(CHANGE_EVENT, changeEvent)]);\n  yield all([takeEvery(CRUD_GET_LIST_SUCCESS, getAdminsWhen)]);\n}\n\nexport default [appSaga];\n","import * as Types from './types';\nimport { UPDATE, UPDATE_MANY } from 'react-admin';\n\nexport const changeEvent = event => ({\n  type: Types.CHANGE_EVENT,\n  payload: event\n});\n\nexport const changeCompanyAdmin = (id, data, basePath) => ({\n  type: Types.CHANGE_COMPANY_ADMIN,\n  payload: { id, data },\n  meta: {\n    fetch: UPDATE,\n    resource: 'companies',\n    refresh: true\n    // notification: {\n    //   body: 'resources.comments.notification.approved_success',\n    //   level: 'info',\n    // },\n    // redirectTo: '/comments',\n    // unselectAll : true,\n    // basePath : basePath\n  }\n});\n\nexport const bulkChangeCompanyAdmin = (ids, data, basePath) => ({\n  type: Types.BULK_CHANGE_COMPANY_ADMIN,\n  payload: { ids, data },\n  meta: {\n    fetch: UPDATE_MANY,\n    resource: 'companies',\n    refresh: true,\n    // notification: {\n    //   body: 'resources.comments.notification.approved_success',\n    //   level: 'info',\n    // },\n    // redirectTo: '/comments',\n    unselectAll: true\n    // basePath : basePath\n  }\n});\n\nexport const changeResourceFlag = (resource, id, data, basePath) => ({\n  type: Types.CHANGE_RESOURCE_FLAG,\n  payload: { id, data },\n  meta: {\n    fetch: UPDATE,\n    resource: resource,\n    refresh: true\n    // notification: {\n    //   body: 'resources.comments.notification.approved_success',\n    //   level: 'info',\n    // },\n    // redirectTo: '/comments',\n    // unselectAll : true,\n    // basePath : basePath\n  }\n});\n\nexport const createMessage = data => ({\n  type: Types.MESSAGE_CREATE,\n  payload: data\n});\n\nexport const showDialog = data => ({\n  type: Types.DIALOG_SHOW,\n  payload: data\n});\n\nexport const hideDialog = () => ({\n  type: Types.DIALOG_HIDE\n});\n\n// export const changeEvent = (id, data, basePath) => ({\n//     type: Types.CHANGE_EVENT,\n//     payload: { id, data: { ...data, is_approved: true } },\n//     meta: { resource: 'comments', fetch: UPDATE },\n// });\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Button, crudUpdateMany } from 'react-admin';\nimport { Confirm } from 'react-admin';\nimport Forward from '@material-ui/icons/Forward';\n\nclass SetStatusAction extends Component {\n  handleDialogClose = () => {\n    this.props.onExit();\n  };\n\n  handleConfirm = () => {\n    const { basePath, crudUpdateMany, resource, selectedIds } = this.props;\n    crudUpdateMany(resource, selectedIds, { views: 0 }, basePath);\n    this.props.onExit();\n  };\n\n  showDialog = () => {};\n\n  render() {\n    return (\n      <Button label=\"actions.change_status\" onClick={this.showDialog}>\n        <Forward />\n      </Button>\n    );\n\n    return (\n      <Confirm\n        isOpen={true}\n        title=\"Update View Count\"\n        content=\"Are you sure you want to reset the views for these items?\"\n        onConfirm={this.handleConfirm}\n        onClose={this.handleDialogClose}\n      />\n    );\n  }\n}\n\nexport default connect(\n  undefined,\n  { crudUpdateMany }\n)(SetStatusAction);\n","import React, { Component } from 'react';\n\nimport { connect } from 'react-redux';\nimport { crudGetList } from 'react-admin';\nimport { createMessage } from '../redux';\nimport debounce from 'lodash/debounce';\n\nimport TextField from '@material-ui/core/TextField';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport dataProvider from '../api/httpClient';\n\nclass EmailForm extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      senderName: '',\n      senderEmail: '',\n      subject: '',\n      text: '',\n      template_id: 0\n    };\n\n    this.onChange = debounce(this.props.createMessage, 500);\n  }\n\n  handleChange = name => event => {\n    const { templates } = this.props;\n\n    const value = event.target.value;\n\n    this.setState({ [name]: value });\n\n    if (name === 'template_id') {\n      //get template data... update subject and message!\n      this.setState({\n        subject: `${value} subject`,\n        text: `${value} text`\n      });\n    }\n  };\n\n  componentWillMount() {\n    const { crudGetList, event } = this.props;\n\n    crudGetList(\n      'templates',\n      { page: 1, perPage: 1000 },\n      { field: 'id', order: 'ASC' },\n      { event_id: event.id }\n    );\n  }\n\n  componentDidUpdate(prevProps) {\n    const { template_id, ...rest } = this.state;\n    this.onChange(rest);\n  }\n\n  templates() {\n    const { data, list } = this.props.templates;\n\n    if (!'ids' in list || !Array.isArray(list.ids)) {\n      return [];\n    }\n\n    return list.ids.map(id => (\n      <MenuItem key={data[id].id} value={data[id].id}>\n        {data[id].name}\n      </MenuItem>\n    ));\n  }\n\n  render() {\n    return (\n      <div>\n        <FormControl>\n          <InputLabel htmlFor=\"age-simple\">Template</InputLabel>\n          <Select\n            value={this.state.template_id}\n            onChange={this.handleChange('template_id')}\n          >\n            <MenuItem value={0}>\n              <em>None</em>\n            </MenuItem>\n            {this.templates()}\n          </Select>\n        </FormControl>\n\n        <TextField\n          id=\"sender\"\n          label=\"Sender Name\"\n          fullWidth\n          value={this.state.senderName}\n          onChange={this.handleChange('senderName')}\n          //className={classes.textField}\n          margin=\"normal\"\n        />\n\n        <TextField\n          id=\"subject\"\n          label=\"Subject\"\n          fullWidth\n          value={this.state.subject}\n          onChange={this.handleChange('subject')}\n          //className={classes.textField}\n          margin=\"normal\"\n        />\n\n        <TextField\n          id=\"content\"\n          label=\"Content\"\n          multiline\n          fullWidth\n          rows=\"8\"\n          rowsMax=\"15\"\n          value={this.state.text}\n          onChange={this.handleChange('text')}\n          //className={classes.textField}\n          margin=\"normal\"\n        />\n      </div>\n    );\n  }\n}\n\nEmailForm.defaultProps = {\n  templates: {},\n  event: {}\n};\n\nexport default connect(\n  state => ({\n    event: state.app.event,\n    templates: state.admin.resources.templates\n  }),\n  { createMessage, crudGetList }\n)(EmailForm);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Button, crudCreate, showNotification } from 'react-admin';\nimport EmailForm from '../EmailForm';\nimport Email from '@material-ui/icons/Email';\nimport { showDialog, hideDialog } from '../../redux';\n/* \n\n  PROPS\n\n  resource: \n  basePath: \n  filterValues:\n  selectedIds:\n\n*/\n\nclass SendMessageAction extends Component {\n  onQuit = () => {\n    this.props.hideDialog();\n  };\n\n  handleConfirm = () => {\n    const {\n      message,\n      basePath,\n      crudCreate,\n      showNotification,\n      resource,\n      selectedIds\n    } = this.props;\n\n    //do not even show notification\n    if (!message) {\n      return;\n    }\n\n    const { subject, text, senderName, senderEmail } = message;\n\n    if (subject.length < 10 || text.length < 10) {\n      showNotification('Message too short!', 'warning');\n      return;\n    }\n\n    crudCreate(\n      'messages',\n      { resource, ids: selectedIds, ...message },\n      basePath,\n      false\n    );\n  };\n\n  showDialog = () => {\n    const { label, showDialog } = this.props;\n\n    showDialog({\n      title: label,\n      content: <EmailForm />,\n      onConfirm: this.handleConfirm,\n      onClose: this.onQuit\n    });\n  };\n\n  render() {\n    const { label } = this.props;\n\n    return (\n      <Button label={label} onClick={this.showDialog}>\n        <Email />\n      </Button>\n    );\n  }\n}\n\nSendMessageAction.defaultProps = {\n  label: 'actions.send_message'\n};\n\nexport default connect(\n  (state, props) => ({ message: state.app.message }),\n  { crudCreate, showNotification, showDialog, hideDialog }\n)(SendMessageAction);\n","import React from 'react';\n//import PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nconst AppTitle = ({ event, ...rest }) => {\n  //console.log(event, rest);\n  return <span>{event && 'name' in event ? event.name : '______'}</span>;\n};\n\nAppTitle.defaultProps = {\n  event: {}\n};\n\nAppTitle.propTypes = {};\n\nexport default connect(\n  state => ({ event: state.app.event }),\n  {}\n)(AppTitle);\n","import React from 'react';\nimport { Menu } from 'react-admin';\nimport { connect } from 'react-redux';\n\nconst MyMenu = ({ dispatch, activeEvent, ...props }) => {\n  return <Menu key={activeEvent.id} {...props} />;\n};\n\nexport default connect(\n  state => ({\n    activeEvent: state.app.event\n  }),\n  null\n)(MyMenu);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { translate } from 'react-admin';\nimport classnames from 'classnames';\nimport compose from 'recompose/compose';\nimport { showDialog, hideDialog } from '../redux';\n\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Button from '@material-ui/core/Button';\nimport { withStyles } from '@material-ui/core/styles';\nimport { fade } from '@material-ui/core/styles/colorManipulator';\nimport ActionCheck from '@material-ui/icons/CheckCircle';\nimport AlertError from '@material-ui/icons/ErrorOutline';\n\nconst styles = theme => ({\n  confirmPrimary: {\n    color: theme.palette.primary.main\n  },\n  confirmWarning: {\n    color: theme.palette.error.main,\n    '&:hover': {\n      backgroundColor: fade(theme.palette.error.main, 0.12),\n      // Reset on mouse devices\n      '@media (hover: none)': {\n        backgroundColor: 'transparent'\n      }\n    }\n  },\n  iconPaddingStyle: {\n    paddingRight: '0.5em'\n  }\n});\n\n/**\n * Confirmation dialog\n *\n * @example\n * <Confirm\n *     isOpen={true}\n *     title=\"Delete Item\"\n *     content=\"Are you sure you want to delete this item?\"\n *     confirm=\"Yes\"\n *     confirmColor=\"primary\"\n *     cancel=\"Cancel\"\n *     onConfirm={() => { // do something }}\n *     onClose={() => { // do something }}\n * />\n */\nconst Confirm = ({\n  isOpen,\n  title,\n  confirm,\n  cancel,\n  confirmColor,\n  onConfirm,\n  onClose,\n  classes,\n  fullWidth,\n  content,\n  dialog,\n  hideDialog\n}) => (\n  <Dialog\n    open={'title' in dialog}\n    onClose={() => {\n      'onClose' in dialog ? dialog.onClose() : hideDialog();\n    }}\n    fullWidth={true}\n    aria-labelledby=\"alert-dialog-title\"\n  >\n    <DialogTitle id=\"alert-dialog-title\">\n      {'title' in dialog ? dialog.title : ''}\n    </DialogTitle>\n    <DialogContent>{'content' in dialog ? dialog.content : ''}</DialogContent>\n    <DialogActions>\n      <Button\n        onClick={'onConfirm' in dialog ? dialog.onConfirm : function() {}}\n        className={classnames('ra-confirm', {\n          [classes.confirmWarning]: confirmColor === 'warning',\n          [classes.confirmPrimary]: confirmColor === 'primary'\n        })}\n        autoFocus\n      >\n        <ActionCheck className={classes.iconPaddingStyle} />\n        {confirm}\n      </Button>\n      <Button\n        onClick={() => {\n          'onClose' in dialog ? dialog.onClose() : hideDialog();\n        }}\n      >\n        <AlertError className={classes.iconPaddingStyle} />\n        {cancel}\n      </Button>\n    </DialogActions>\n  </Dialog>\n);\n\nConfirm.propTypes = {\n  cancel: PropTypes.string.isRequired,\n  classes: PropTypes.object.isRequired,\n  confirm: PropTypes.string.isRequired,\n  confirmColor: PropTypes.string.isRequired,\n\n  dialog: PropTypes.shape({\n    title: PropTypes.string,\n    content: PropTypes.node,\n    onConfirm: PropTypes.func,\n    onClose: PropTypes.func\n  })\n};\n\nConfirm.defaultProps = {\n  cancel: 'Cancel',\n  classes: {},\n  confirm: 'Confirm',\n  confirmColor: 'primary'\n};\n\nconst enhance = compose(\n  withStyles(styles),\n  translate,\n  connect(\n    state => ({ dialog: state.ui.dialog }),\n    { hideDialog }\n  )\n);\n\nexport default enhance(Confirm);\n","import React from 'react';\nimport { Layout } from 'react-admin';\nimport MyMenu from './MyMenu';\nimport MyAppBar from './MyAppBar';\nimport MyDialog from './MyDialog';\n\nconst MyLayout = props => (\n  <React.Fragment>\n    <Layout\n      {...props}\n      //  appBar={MyAppBar}\n      menu={MyMenu}\n      //notification={MyNotification}\n    />\n\n    <MyDialog />\n  </React.Fragment>\n);\n\nexport default MyLayout;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { refreshView } from 'react-admin';\n\nclass WithEvent extends React.Component {\n  // shouldComponentUpdate(nextProps, nextState){\n  //   if(this.props.activeEventId !== nextProps.activeEventId){\n  //     return true\n  //   }\n  //   return false\n  // }\n\n  // componentDidUpdate(prevProps){\n  //   console.log(this.props, prevProps)\n  //   this.props.refreshView();\n  // }\n\n  render() {\n    return this.props.children(this.props.activeEventId, {});\n  }\n}\n\nexport default connect(\n  state => ({\n    activeEventId:\n      'id' in state.app.event && state.app.event.id ? state.app.event.id : 0\n  }),\n  { refreshView }\n)(WithEvent);\n","import React from 'react';\nimport { Route } from 'react-router-dom';\n\nexport default [\n  // <Route exact path=\"/foo\" component={Foo} />,\n  // <Route exact path=\"/bar\" component={Bar} />,\n  // <Route exact path=\"/baz\" component={Baz} noLayout />,\n];\n","import React from 'react';\n\nimport { SelectArrayInput } from 'react-admin';\n\nconst CompanyData = props => (\n  <SelectArrayInput\n    {...props}\n    // source=\"fields\"\n    choices={[\n      { id: 'website', name: 'website' },\n      { id: 'facebook', name: 'facebook' },\n      { id: 'linkedin', name: 'linkedin' },\n      { id: 'event_manager', name: 'Event Manager' },\n      { id: 'twitter', name: 'twitter' }\n    ]}\n  />\n);\n\nexport default CompanyData;\n","import React from 'react';\nimport { connect } from 'react-redux';\n// import compose from 'recompose/compose';\n// import { withStyles } from '@material-ui/core/styles';\n\nimport {\n  SelectInput\n  //SelectArrayInput,\n} from 'react-admin';\n\nclass Admin extends React.Component {\n  buildChoices() {\n    const { admins } = this.props;\n\n    return admins.list.ids.map(id => ({\n      id: admins.data[id].id,\n      name: `${admins.data[id].fname} ${admins.data[id].lname}`\n    }));\n  }\n\n  render() {\n    const { source, label } = this.props;\n\n    return (\n      <SelectInput\n        source={source}\n        label={label}\n        choices={this.buildChoices()}\n      />\n    );\n  }\n}\n\nAdmin.defaultProps = {};\n\nexport default connect(\n  state => ({ admins: state.admin.resources.admins }),\n  {}\n)(Admin);\n","import React from 'react';\nimport { ImageField, TextField } from 'react-admin';\nimport { withStyles } from '@material-ui/core/styles';\nimport get from 'lodash/get';\n\nconst styles = {\n  logotype: {\n    border: '1px solid #eaeaea',\n    margin: 2,\n    textAlign: 'center',\n    '& img': {\n      maxWidth: 200,\n      maxHeight: 45\n    }\n  },\n  name: {\n    border: '1px solid #eaeaea',\n    margin: 2,\n    textAlign: 'center',\n    fontWeigth: 900,\n    minHeight: 45\n  }\n};\n\nconst ConditionalField = ({ classes, record, sources, ...rest }) => {\n  if (!record || !sources || !sources.length) return null;\n\n  let source = sources.find(function(item) {\n    return get(record, item, '').length;\n  });\n\n  if (source) {\n    const val = get(record, source);\n\n    if (val.indexOf('http') > -1) {\n      return (\n        <ImageField\n          source={source}\n          record={record}\n          className={classes.logotype}\n          {...rest}\n        />\n      );\n    } else {\n      return (\n        <TextField\n          source={source}\n          record={record}\n          className={classes.name}\n          {...rest}\n        />\n      );\n    }\n  }\n\n  return null;\n};\n\nConditionalField.defaultProps = { addLabel: true };\n\nexport default withStyles(styles)(ConditionalField);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport compose from 'recompose/compose';\n\nimport { withStyles } from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Avatar from '@material-ui/core/Avatar';\n\nimport get from 'lodash/get';\n\nimport { showDialog, hideDialog } from '../../redux';\n\nconst styles = theme => ({\n  root: {\n    width: '100%',\n    maxWidth: 360,\n    backgroundColor: theme.palette.background.paper\n  }\n});\n\nclass Admins extends React.Component {\n  render() {\n    const { admins, classes, selected, onClick } = this.props;\n\n    return (\n      <List className={classes.root}>\n        {admins.list.ids.map(id => (\n          <ListItem\n            key={id}\n            button\n            selected={id == selected}\n            onClick={() => onClick(id)}\n          >\n            <Avatar>{get(admins.data[id], 'initials')}</Avatar>\n            <ListItemText\n              primary={`${get(admins.data[id], 'fname')} ${get(\n                admins.data[id],\n                'lname'\n              )}`}\n              secondary=\".\"\n            />\n          </ListItem>\n        ))}\n      </List>\n    );\n  }\n}\n\nAdmins.defaultProps = {\n  admins: {},\n  selected: 0,\n  onClick: function() {}\n};\n\nconst enhance = compose(\n  withStyles(styles),\n  connect(\n    state => ({ admins: state.admin.resources.admins }),\n    { showDialog, hideDialog }\n  )\n);\n\nexport default enhance(Admins);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport compose from 'recompose/compose';\nimport get from 'lodash/get';\nimport classNames from 'classnames';\n\nimport Avatar from '@material-ui/core/Avatar';\nimport { withStyles } from '@material-ui/core/styles';\nimport deepOrange from '@material-ui/core/colors/deepOrange';\n\nimport { changeCompanyAdmin } from '../../../redux';\nimport { showDialog, hideDialog } from '../../../redux';\n\nimport Admins from '../../../components/BulkActions/Admins';\n\nconst styles = {\n  avatar: {\n    margin: 10,\n    color: '#fff',\n    cursor: 'pointer'\n  },\n\n  adminNotSet: {\n    backgroundColor: '#cccccc'\n  },\n\n  adminSet: {\n    backgroundColor: deepOrange[500]\n  }\n};\n\nclass SelectAdminField extends React.Component {\n  onQuit = () => {\n    this.props.hideDialog();\n  };\n\n  handleConfirm = id => {\n    const { changeCompanyAdmin, record, basePath } = this.props;\n    //this should be rather taken from REDUX....\n    //in order to facilitate showDialog / onConfirm / error handling\n    changeCompanyAdmin(record.id, { admin_id: id }, basePath);\n    this.onQuit();\n  };\n\n  showAction = name => event => {\n    const { showDialog, label, record } = this.props;\n\n    showDialog({\n      title: record.slug,\n      content: (\n        <div>\n          <Admins onClick={this.handleConfirm} selected={record.admin_id} />\n        </div>\n      ),\n      //onConfirm: this.handleConfirm,\n      onClose: this.onQuit\n    });\n  };\n\n  render() {\n    const { classes, admins, record } = this.props;\n\n    return (\n      <Avatar\n        className={classNames({\n          [classes.avatar]: true,\n          [classes.adminNotSet]: !record.admin_id,\n          [classes.adminSet]: record.admin_id\n        })}\n        onClick={this.showAction()}\n      >\n        {record.admin_id ? get(admins.data[record.admin_id], 'initials') : ''}\n      </Avatar>\n    );\n  }\n}\n\nSelectAdminField.defaultProps = {\n  label: '',\n  record: {},\n  admins: {}\n};\n\nconst enhance = compose(\n  withStyles(styles),\n  connect(\n    state => ({ admins: state.admin.resources.admins }),\n    { showDialog, hideDialog, changeCompanyAdmin }\n  )\n);\n\nexport default enhance(SelectAdminField);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport Switch from '@material-ui/core/Switch';\n\nimport { changeResourceFlag } from '../../../redux';\n\nclass Flagswitch extends React.Component {\n  constructor(props) {\n    super(props);\n    const { record, source, checkedValue } = this.props;\n    this.state = { status: record[source] == checkedValue ? true : false };\n  }\n\n  handleChange = name => event => {\n    const {\n      record,\n      resource,\n      source,\n      changeResourceFlag,\n      checkedValue,\n      unCheckedValue\n    } = this.props;\n\n    this.setState(\n      {\n        status: event.target.checked\n      },\n      function() {\n        const { status } = this.state;\n\n        changeResourceFlag(resource, record.id, {\n          [source]: status ? checkedValue : unCheckedValue\n        });\n      }\n    );\n  };\n\n  render() {\n    const { status } = this.state;\n    const { checkedValue } = this.props;\n\n    return (\n      <Switch\n        checked={status ? true : false}\n        onChange={this.handleChange()}\n        value={checkedValue}\n      />\n    );\n  }\n}\n\nFlagswitch.defaultProps = {\n  addLabel: true,\n  checkedValue: '1',\n  unCheckedValue: '0'\n};\n\nexport default connect(\n  null,\n  {\n    changeResourceFlag\n  }\n)(Flagswitch);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Button, showNotification } from 'react-admin';\nimport Icon from '@material-ui/icons/SupervisorAccount';\nimport { showDialog, hideDialog } from '../../../redux';\n\nimport Admins from '../../../components/BulkActions/Admins';\nimport { bulkChangeCompanyAdmin } from '../../../redux';\n\n/* \n\nPROPS\n==================================\nbasePath: \"/companies\"\nfilterValues: {present: true, featured: false, admin_id: 5}\nlabel: \"Assign an admin\"\nresource: \"companies\"\nselectedIds: [1]\n\n*/\n\nclass BulkAssignAdmin extends React.Component {\n  onQuit = () => {\n    const { hideDialog } = this.props;\n    hideDialog();\n  };\n\n  handleConfirm = id => {\n    const {\n      basePath,\n      bulkChangeCompanyAdmin,\n      //   showNotification,\n      selectedIds\n    } = this.props;\n\n    //we could filter selectedIds to change only what really differs?\n    bulkChangeCompanyAdmin(selectedIds, { admin_id: id }, basePath);\n    this.onQuit();\n  };\n\n  handleDialog = () => {\n    const { label, showDialog, selectedIds } = this.props;\n\n    showDialog({\n      title: `${label} ${selectedIds.length} records`,\n      content: (\n        <div>\n          <Admins onClick={this.handleConfirm} />\n        </div>\n      ),\n      //onConfirm: this.handleConfirm,\n      onClose: this.onQuit\n    });\n  };\n\n  render() {\n    const { label } = this.props;\n\n    return (\n      <Button label={label} onClick={this.handleDialog}>\n        <Icon />\n      </Button>\n    );\n  }\n}\n\nBulkAssignAdmin.defaultProps = {\n  selectedIds: [],\n  label: 'actions.send_message'\n};\n\nexport default connect(\n  null,\n  { bulkChangeCompanyAdmin, showNotification, showDialog, hideDialog }\n)(BulkAssignAdmin);\n","import React from 'react';\n\nimport {\n  List,\n  Datagrid,\n  TextField,\n  ShowButton,\n  TextInput,\n  FunctionField,\n  Filter,\n  BooleanInput,\n  SelectInput\n  // SelectArrayInput,\n  // ReferenceArrayField,\n  // ReferenceManyField,\n  // ReferenceField,\n  // SingleFieldList\n} from 'react-admin';\n\nimport { Admin, CompanyData } from './filters';\n\nimport activeEventId from '../../api/app';\nimport { SendMessageAction } from '../../components';\nimport ConditionalField from './ConditionalField';\n\n//import DynamicField from './DynamicField';\n\nimport { Flagswitch, SelectAdminField, BulkAssignAdmin } from './actions';\n\nconst CustomBulkActions = props => (\n  <React.Fragment>\n    <SendMessageAction label=\"Send e-mail message\" {...props} />\n    <BulkAssignAdmin label=\"Assign an admin\" {...props} />\n  </React.Fragment>\n);\n\nconst Filters = props => (\n  <Filter {...props}>\n    <BooleanInput source=\"featured\" label=\"Featured\" />\n    <BooleanInput source=\"present\" alwaysOn label=\"Present\" />\n\n    <TextInput label=\"Search\" source=\"q\" />\n\n    <CompanyData source=\"fields\" label=\"Field\" />\n\n    <Admin source=\"admin_id\" label=\"Admin\" />\n\n    <SelectInput\n      source=\"lang\"\n      choices={[{ id: 'en', name: 'en' }, { id: 'de', name: 'de' }]}\n    />\n  </Filter>\n);\n\nconst customColumns = [];\n\nclass ViewList extends React.Component {\n  render() {\n    //console.log(this.props);\n\n    return (\n      <List\n        {...this.props}\n        filters={<Filters />}\n        filterDefaultValues={{ present: true, featured: false }}\n        filter={{ event_id: activeEventId() }}\n        bulkActionButtons={<CustomBulkActions />}\n        perPage={100}\n      >\n        <Datagrid>\n          {/* <FunctionField label=\"Spending\" render={record => `${record.event_ids.length}%`} /> */}\n\n          {/*   <ConditionalField\n            sources={['settings.logotype_cdn', 'profile.name', 'slug']}\n            label=\"logotype\"\n        />\n       */}\n\n          <TextField source=\"slug\" />\n\n          <Flagswitch source=\"featured\" />\n\n          <Flagswitch source=\"promo\" />\n\n          <SelectAdminField source=\"admin_id\" />\n\n          {customColumns.map(source => (\n            <TextField key={`_${source}`} source={source} />\n          ))}\n\n          {/* <DynamicField label=\"fields\" /> */}\n\n          {/* <TextField source=\"profile.lang\" label=\"Language\" /> */}\n\n          <FunctionField\n            sortBy=\"featured\"\n            label=\"Present\"\n            render={record =>\n              record.event_ids.indexOf(activeEventId()) > -1 ? `tak` : 'nie'\n            }\n          />\n\n          {/* <FunctionField label=\"Retention\" render={record => `${record.event_ids.length}%`} />\n\n          <FunctionField label=\"Spending\" render={record => `${record.event_ids.length}%`} /> */}\n\n          <ShowButton />\n        </Datagrid>\n      </List>\n    );\n  }\n}\n\nexport default ViewList;\n","const styles = {\n  ok: {\n    backgroundColor: '#468847',\n    color: '#ffffff'\n  },\n\n  hold: {\n    backgroundColor: '#f89406',\n    color: '#ffffff'\n  },\n\n  new: {\n    backgroundColor: '#b94a48',\n    color: '#ffffff'\n  },\n\n  cancelled: {\n    backgroundColor: '#eaeaea',\n    color: '#999999'\n  },\n\n  icon: {\n    color: '#ffffff'\n  },\n\n  highlight: {\n    backgroundColor: '#000000',\n    color: '#ffffff'\n  }\n};\n\nexport default styles;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { showNotification, refreshView, UPDATE } from 'react-admin';\n\nimport compose from 'recompose/compose';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Chip from '@material-ui/core/Chip';\nimport { withStyles } from '@material-ui/core/styles';\nimport Icon from '@material-ui/icons/Edit';\n\nimport { statuses as styles } from '../../styles';\nimport { statuses } from '../../api/app';\nimport dataProvider from '../../api/httpClient';\n\nclass PurchaseStatusField extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      control: 'chip',\n      status: this.props.record.status\n    };\n  }\n  handleClick = name => event => {\n    this.setState({ control: 'select' });\n  };\n\n  handleStatusChange = name => event => {\n    this.setState(\n      {\n        //control : \"chip\",\n        status: event.target.value\n      },\n      function() {\n        const { resource, showNotification, refreshView, record } = this.props;\n        const { status } = this.state;\n\n        dataProvider(UPDATE, resource, {\n          id: record.id,\n          data: {\n            status: status\n          }\n        })\n          .then(({ data }) => {\n            showNotification('participants.status.changed', 'info');\n            refreshView();\n          })\n          .catch(e => {\n            console.error(e);\n            showNotification('Error', 'warning');\n          });\n      }\n    );\n  };\n\n  handleClose = name => event => {\n    this.setState({\n      control: 'chip'\n    });\n  };\n\n  select() {\n    const { classes, record, source, ...rest } = this.props;\n    const { status } = this.state;\n\n    return (\n      <Select\n        value={status}\n        onChange={this.handleStatusChange()}\n        onClose={this.handleClose()}\n        classes={{\n          root: classes[record.status],\n          selected: classes.highlight\n        }}\n        open={true}\n      >\n        {statuses\n          .filter(({ id }) => record.status != id)\n          .map(({ id, name }) => (\n            <MenuItem\n              classes={{\n                root: classes[id]\n              }}\n              key={id}\n              value={id}\n            >\n              {name}\n            </MenuItem>\n          ))}\n      </Select>\n    );\n  }\n\n  chip() {\n    const { classes, record, source, ...rest } = this.props;\n    const { status } = this.state;\n\n    // console.log(\"new status\", status);\n\n    return (\n      <Chip\n        classes={{ root: classes[record.status] }}\n        label={record[source]}\n        clickable={true}\n        onClick={this.handleClick()}\n        icon={<Icon className={classes.icon} />}\n      />\n    );\n  }\n\n  render() {\n    const { control } = this.state;\n\n    return this[control]();\n  }\n}\n\nconst enhance = compose(\n  withStyles(styles),\n  connect(\n    null,\n    { showNotification, refreshView }\n  )\n);\n\nexport default enhance(PurchaseStatusField);\n","import React from 'react';\n\nimport get from 'lodash/get';\n\nconst ShowTitle = ({ record }) => {\n  return <span>{record ? `${get(record, 'profile.name')}` : ''}</span>;\n};\n\nexport default ShowTitle;\n","import React from 'react';\nimport {\n  EditButton,\n  RefreshButton,\n  ListButton,\n  CardActions\n} from 'react-admin';\nimport Button from '@material-ui/core/Button';\n\nconst cardActionStyle = {\n  zIndex: 2,\n  display: 'inline-block',\n  float: 'right'\n};\n\nconst ShowActions = ({ basePath, data, resource }) => (\n  <CardActions style={cardActionStyle}>\n    <EditButton basePath={basePath} record={data} />\n    {/* Add your custom actions */}\n    <RefreshButton />\n    <ListButton />\n    <Button color=\"primary\" onClick={null}>\n      Custom Action\n    </Button>\n  </CardActions>\n);\n\nexport default ShowActions;\n","import React from 'react';\nimport {\n  Show,\n  ArrayField,\n  Datagrid,\n  TabbedShowLayout,\n  Tab,\n  TextField,\n  DateField,\n  EditButton,\n  ReferenceManyField,\n  NumberField\n} from 'react-admin';\nimport Chip from '@material-ui/core/Chip';\n\nimport PurchaseStatusField from '../purchases/PurchaseStatusField';\nimport ShowTitle from './ShowTitle';\nimport ShowActions from './ShowActions';\nimport { uniqueValues } from '../../api/app';\n\nconst Roles = ({ record, source }) =>\n  record &&\n  source in record &&\n  uniqueValues(record[source]).map(role => <Chip key={role} label={role} />);\nRoles.defaultProps = { record: {}, addLabel: true };\n\nconst ViewShow = props => (\n  <Show actions={<ShowActions />} title={<ShowTitle />} {...props}>\n    <TabbedShowLayout>\n      <Tab label=\"summary\">\n        <Roles source=\"roles\" />\n\n        <ReferenceManyField\n          reference=\"companydata\"\n          target=\"company_id\"\n          label=\"Profile data\"\n        >\n          <Datagrid>\n            <TextField source=\"name\" />\n            <TextField source=\"value\" />\n            <DateField source=\"updated_at\" />\n            <EditButton />\n          </Datagrid>\n        </ReferenceManyField>\n      </Tab>\n\n      <Tab label=\"related\" path=\"related\">\n        <ReferenceManyField\n          reference=\"related\"\n          target=\"participant_id\"\n          label=\"Profile data\"\n        >\n          <Datagrid>\n            <TextField source=\"name\" />\n            <TextField source=\"value\" />\n            <EditButton />\n          </Datagrid>\n        </ReferenceManyField>\n      </Tab>\n\n      <Tab label=\"Purchases\" path=\"purchases\">\n        <ArrayField source=\"purchases\">\n          <Datagrid>\n            <DateField source=\"created_at\" />\n            <PurchaseStatusField source=\"status\" />\n            <NumberField source=\"amount\" />\n          </Datagrid>\n        </ArrayField>\n\n        <DateField label=\"Publication date\" source=\"published_at\" />\n      </Tab>\n      <Tab label=\"comments\" path=\"comments\">\n        <ReferenceManyField\n          reference=\"comments\"\n          target=\"participant_id\"\n          addLabel={false}\n        >\n          <Datagrid>\n            <TextField source=\"body\" />\n            <DateField source=\"created_at\" />\n            <EditButton />\n          </Datagrid>\n        </ReferenceManyField>\n      </Tab>\n    </TabbedShowLayout>\n  </Show>\n);\n\nexport default ViewShow;\n","import React from 'react';\nimport {\n  List,\n  Datagrid,\n  DateField,\n  TextField,\n  NumberField,\n  ChipField,\n  ShowButton,\n  TextInput,\n  SelectInput,\n  Filter\n} from 'react-admin';\n\nimport { statuses } from '../../api/app';\nimport { ReferenceField } from 'react-admin';\nimport {\n  SetStatusAction,\n  SendMessageAction,\n  WithEvent\n} from '../../components';\nimport PurchaseStatusField from './PurchaseStatusField';\n\nconst Filters = props => (\n  <Filter {...props}>\n    <TextInput label=\"Search\" source=\"q\" alwaysOn />\n    <TextInput label=\"Title\" source=\"title\" defaultValue=\"Hello, World!\" />\n\n    <SelectInput source=\"status\" choices={statuses} alwaysOn />\n  </Filter>\n);\n\nconst CustomBulkActions = props => (\n  <React.Fragment>\n    <SetStatusAction label=\"Change status\" {...props} />\n    <SendMessageAction label=\"Send e-mail message\" {...props} />\n  </React.Fragment>\n);\n\nconst ShowParticipantButton = ({ record, basePath, ...rest }) => (\n  <ShowButton\n    {...rest}\n    basePath=\"/participants\"\n    record={{ ...record, id: record.participant_id }}\n  />\n);\n\nconst ViewList = props => (\n  <WithEvent>\n    {activeEventId => (\n      <List\n        bulkActionButtons={<CustomBulkActions />}\n        {...props}\n        perPage={50}\n        filters={<Filters />}\n        filter={{ event_id: activeEventId }}\n      >\n        <Datagrid>\n          <PurchaseStatusField source=\"status\" />\n\n          <TextField source=\"email\" />\n\n          <DateField source=\"created_at\" showTime />\n\n          <NumberField source=\"amount\" textAlign=\"right\" />\n\n          <ReferenceField\n            label=\"Company\"\n            reference=\"companies\"\n            source=\"company_id\"\n            linkType=\"show\"\n          >\n            <ChipField source=\"slug\" sortable={false} />\n          </ReferenceField>\n\n          <ShowParticipantButton />\n        </Datagrid>\n      </List>\n    )}\n  </WithEvent>\n);\n\nexport default ViewList;\n","import React from 'react';\nimport { SelectInput, crudGetList } from 'react-admin';\nimport { connect } from 'react-redux';\n\n//https://github.com/marmelab/react-admin/blob/6015670a863bef868a0cafcfb1706187609a6369/packages/ra-core/src/actions/dataActions.js\n\nclass FilterByTicketId extends React.Component {\n  componentWillMount() {\n    const { crudGetList, event } = this.props;\n\n    crudGetList(\n      'tickets',\n      { page: 1, perPage: 1000 },\n      { field: 'id', order: 'ASC' },\n      { event_id: event.id }\n    );\n  }\n\n  buildTicketList() {\n    const { data, list } = this.props.tickets;\n\n    if (!'ids' in list || !Array.isArray(list.ids)) {\n      return [];\n    }\n\n    return list.ids.map(id => ({ id: data[id].id, name: data[id].name }));\n  }\n\n  render() {\n    const { source, allowEmpty } = this.props;\n\n    return (\n      <SelectInput\n        source={source}\n        allowEmpty={allowEmpty}\n        choices={this.buildTicketList()}\n      />\n    );\n  }\n}\n\nFilterByTicketId.defaultProps = {\n  tickets: {},\n  event: {}\n};\n\nexport default connect(\n  state => ({\n    event: state.app.event,\n    tickets: state.admin.resources.tickets\n  }),\n  { crudGetList }\n)(FilterByTicketId);\n","import React from 'react';\nimport { TextInput, SelectInput, Filter } from 'react-admin';\nimport FilterByTicketId from './FilterByTicketId';\nimport { roles } from '../../api/app';\n\nconst Filters = props => (\n  <Filter {...props}>\n    <TextInput label=\"Search\" source=\"q\" alwaysOn />\n\n    <FilterByTicketId source=\"ticket_id\" alwaysOn allowEmpty />\n\n    <SelectInput source=\"role\" choices={roles} alwaysOn allowEmpty />\n  </Filter>\n);\n\nexport default Filters;\n","import React from 'react';\nimport {\n  List,\n  Datagrid,\n  DateField,\n  TextField,\n  ChipField,\n  ShowButton,\n  DeleteButton,\n  FunctionField\n} from 'react-admin';\n\nimport { ReferenceArrayField, SingleFieldList } from 'react-admin';\nimport {\n  SetStatusAction,\n  SendMessageAction,\n  WithEvent\n} from '../../components';\nimport ListFilters from './ListFilters';\n\nconst CustomBulkActions = props => (\n  <React.Fragment>\n    <SetStatusAction label=\"Change status\" {...props} />\n    <SendMessageAction label=\"Send e-mail message\" {...props} />\n  </React.Fragment>\n);\n\nconst ViewList = props => (\n  <WithEvent>\n    {activeEventId => (\n      <List\n        {...props}\n        perPage={100}\n        filters={<ListFilters />}\n        filter={{ event_id: activeEventId }}\n        bulkActionButtons={<CustomBulkActions />}\n      >\n        <Datagrid>\n          <TextField source=\"email\" />\n          <DateField source=\"created_at\" showTime />\n          <TextField source=\"status\" />\n\n          <ReferenceArrayField\n            label=\"Roles\"\n            reference=\"tickets\"\n            source=\"ticket_ids\"\n          >\n            <SingleFieldList>\n              <FunctionField\n                render={record =>\n                  record.role ? (\n                    <ChipField source=\"role\" record={record} />\n                  ) : (\n                    <span />\n                  )\n                }\n              />\n            </SingleFieldList>\n          </ReferenceArrayField>\n\n          <TextField source=\"lang\" />\n          <ShowButton />\n          <DeleteButton />\n        </Datagrid>\n      </List>\n    )}\n  </WithEvent>\n);\n\nexport default ViewList;\n","import React from 'react';\n\nimport get from 'lodash/get';\n\nconst ShowTitle = ({ record }) => {\n  return (\n    <span>\n      {record\n        ? `${get(record, 'fields.fname')} ${get(record, 'fields.lname')} ${\n            record.email\n          }`\n        : ''}\n    </span>\n  );\n};\n\nexport default ShowTitle;\n","import React from 'react';\nimport {\n  Show,\n  ArrayField,\n  Datagrid,\n  SimpleShowLayout,\n  TabbedShowLayout,\n  Tab,\n  TextField,\n  DateField,\n  EditButton,\n  ChipField,\n  ReferenceManyField,\n  NumberField\n} from 'react-admin';\n\nimport PurchaseStatusField from '../purchases/PurchaseStatusField';\nimport Chip from '@material-ui/core/Chip';\nimport ShowTitle from './ShowTitle';\nimport { uniqueValues } from '../../api/app';\n\nconst Roles = ({ record }) => (\n  <div>\n    {record &&\n      'roles' in record &&\n      record.roles.map(role => <Chip key={role} label={role} />)}\n  </div>\n);\n\nRoles.defaultProps = { addLabel: true };\n\nconst MyPurchaseStatusField = ({ resource, ...props }) => (\n  <PurchaseStatusField {...props} resource=\"purchases\" />\n);\n\nconst ViewShow = props => (\n  <Show title={<ShowTitle />} {...props}>\n    <TabbedShowLayout>\n      <Tab label=\"summary\">\n        <Roles source=\"roles\" />\n\n        <TextField source=\"id\" />\n        <TextField source=\"token\" />\n\n        <ReferenceManyField\n          reference=\"fields\"\n          target=\"participant_id\"\n          label=\"Profile data\"\n        >\n          <Datagrid>\n            <TextField source=\"name\" />\n            <TextField source=\"value\" />\n            <EditButton />\n          </Datagrid>\n        </ReferenceManyField>\n\n        <TextField source=\"title\" />\n        <TextField source=\"teaser\" />\n      </Tab>\n\n      <Tab label=\"related\" path=\"related\">\n        <ReferenceManyField\n          reference=\"related\"\n          target=\"participant_id\"\n          label=\"Profile data\"\n        >\n          <Datagrid>\n            <TextField source=\"name\" />\n            <TextField source=\"value\" />\n            <EditButton />\n          </Datagrid>\n        </ReferenceManyField>\n      </Tab>\n\n      <Tab label=\"Purchases\" path=\"purchases\">\n        <ArrayField source=\"purchases\">\n          <Datagrid>\n            <DateField source=\"created_at\" />\n            <MyPurchaseStatusField source=\"status\" />\n            <NumberField source=\"amount\" />\n          </Datagrid>\n        </ArrayField>\n\n        <TextField\n          label=\"Password (if protected post)\"\n          source=\"password\"\n          type=\"password\"\n        />\n        <DateField label=\"Publication date\" source=\"published_at\" />\n        {/* <NumberField source=\"average_note\" /> */}\n        {/* <BooleanField label=\"Allow comments?\" source=\"commentable\" defaultValue /> */}\n        <TextField label=\"Nb views\" source=\"views\" />\n      </Tab>\n      <Tab label=\"comments\" path=\"comments\">\n        <ReferenceManyField\n          reference=\"comments\"\n          target=\"participant_id\"\n          addLabel={false}\n        >\n          <Datagrid>\n            <TextField source=\"body\" />\n            <DateField source=\"created_at\" />\n            <EditButton />\n          </Datagrid>\n        </ReferenceManyField>\n      </Tab>\n    </TabbedShowLayout>\n  </Show>\n);\n\nexport default ViewShow;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport ImageEye from '@material-ui/icons/RemoveRedEye';\nimport { Link } from 'react-router-dom';\n//import { linkToRecord } from 'ra-core';\nimport { stringify } from 'qs';\n\nimport { Button } from 'react-admin';\n\nconst ShowButton = ({\n  basePath = '',\n  label = 'ra.action.show',\n  record = {},\n  ...rest\n}) => (\n  <Button\n    component={Link}\n    to={{\n      pathname: 'participants',\n      search: stringify(\n        { filter: JSON.stringify({ ticket_id: record.id }) },\n        { strictNullHandling: true }\n      )\n    }}\n    label={label}\n    {...rest}\n  >\n    <ImageEye />\n  </Button>\n);\n\nShowButton.propTypes = {\n  basePath: PropTypes.string,\n  label: PropTypes.string,\n  record: PropTypes.object\n};\n\n//const enhance =\n\nexport default ShowButton;\n","import React from 'react';\nimport { TextInput, SelectInput, Filter } from 'react-admin';\n\nconst Filters = props => (\n  <Filter {...props}>\n    <TextInput label=\"Search\" source=\"q\" alwaysOn />\n    <TextInput label=\"Title\" source=\"title\" defaultValue=\"Hello, World!\" />\n\n    <SelectInput\n      source=\"tag\"\n      choices={[\n        { id: 'programming', name: 'Programming' },\n        { id: 'lifestyle', name: 'Lifestyle' },\n        { id: 'photography', name: 'Photography' }\n      ]}\n    />\n  </Filter>\n);\n\nexport default Filters;\n","import React from 'react';\n\nconst TicketTags = ({ record }) => (\n  <ul>\n    {record.tags.map(item => (\n      <li key={item.name}>{item.name}</li>\n    ))}\n  </ul>\n);\n\nTicketTags.defaultProps = { addLabel: true };\n\nexport default TicketTags;\n","import React from 'react';\nimport {\n  List,\n  Datagrid,\n  DateField,\n  TextField,\n  ChipField,\n  FunctionField,\n  NumberField,\n  EditButton\n} from 'react-admin';\n\nimport RelatedParticipants from './RelatedParticipants';\nimport Filters from './Filters';\nimport TicketTags from './TicketTags';\n\nimport { WithEvent } from '../../components';\n\nconst ViewList = props => (\n  <WithEvent>\n    {activeEventId => (\n      <List\n        {...props}\n        perPage={100}\n        filters={<Filters />}\n        filter={{ event_id: activeEventId }}\n      >\n        <Datagrid>\n          <TextField source=\"name\" />\n\n          <FunctionField\n            label=\"role\"\n            render={record =>\n              record.role ? (\n                <ChipField record={record} source=\"role\" />\n              ) : (\n                <span>not set</span>\n              )\n            }\n          />\n\n          <TicketTags source=\"tags\" />\n\n          {/* <ArrayField source=\"tags\">\n              <SingleFieldList>\n              <ChipField source=\"name\" />\n              </SingleFieldList>\n              </ArrayField> */}\n\n          <DateField source=\"start\" showTime />\n          <DateField source=\"end\" showTime />\n\n          <TextField source=\"price\" />\n          <NumberField source=\"limit\" />\n\n          <RelatedParticipants label=\"Show Participants\" />\n          <EditButton />\n        </Datagrid>\n      </List>\n    )}\n  </WithEvent>\n);\n\nexport default ViewList;\n","import React from 'react';\nimport { Edit, SimpleForm, TextInput } from 'react-admin';\n// import ActiveEventButton from './ActiveEventButton';\n// import ActiveEventChipField from './ActiveEventChipField';\n\nimport PurchaseStatusField from '../purchases/PurchaseStatusField';\n\nimport Chip from '@material-ui/core/Chip';\n\nimport get from 'lodash/get';\n\nconst Title = ({ record }) => {\n  return (\n    <span>\n      {record\n        ? `${get(record, 'fields.fname')} ${get(record, 'fields.lname')} ${\n            record.email\n          }`\n        : ''}\n    </span>\n  );\n};\n\nconst Roles = ({ record }) => (\n  <div>\n    {record &&\n      'roles' in record &&\n      record.roles.map(role => <Chip key={role} label={role} />)}\n  </div>\n);\n\nRoles.defaultProps = { addLabel: true };\n\nconst ProfileFields = ({ record }) =>\n  // <ul>{Object.keys(record.fields).map(key => <li key={key}>{record.fields[key]}</li>)}</ul>\n\n  null;\n\nProfileFields.defaultProps = { addLabel: true };\n\nconst redirect = (basePath, id, data) => `/companies/${data.company_id}/show`;\n\nconst TicketEdit = props => (\n  <Edit title={<Title />} {...props}>\n    <SimpleForm redirect={redirect}>\n      <TextInput source=\"value\" />\n    </SimpleForm>\n  </Edit>\n);\n\nexport default TicketEdit;\n","import React from 'react';\nimport {\n  List,\n  Datagrid,\n  ChipField,\n  NumberField,\n  EditButton,\n  ReferenceManyField,\n  SimpleList\n} from 'react-admin';\n\nimport activeEventId from '../../api/app';\n\nconst TagsField = ({ record }) => (\n  <ul>\n    {record.tags.map(item => (\n      <li key={item.name}>{item.name}</li>\n    ))}\n  </ul>\n);\nTagsField.defaultProps = { addLabel: true };\n\nconst BoothColorField = ({ record, ...rest }) => (\n  <ChipField\n    style={{\n      backgroundColor: record.booth.bgcolor,\n      color: record.booth.fontcolor\n    }}\n    record={record}\n    {...rest}\n  />\n);\nBoothColorField.defaultProps = { addLabel: true };\n\nconst ViewList = props => (\n  <List {...props} perPage={100} filter={{ event_id: activeEventId() }}>\n    <Datagrid>\n      <BoothColorField source=\"name\" />\n      <TagsField source=\"tags\" />\n      <NumberField source=\"limit\" />\n\n      <ReferenceManyField\n        label=\"Assigned tickets\"\n        reference=\"tickets\"\n        target=\"ticket_group_id\"\n      >\n        <SimpleList\n          primaryText={record => record.name}\n          secondaryText={record => `${record.start} - ${record.end}`}\n          tertiaryText={record => `${record.price} (${record.limit})`}\n        />\n      </ReferenceManyField>\n\n      <EditButton />\n    </Datagrid>\n  </List>\n);\n\nexport default ViewList;\n","import React from 'react';\nimport { TextField, ChipField } from 'react-admin';\n\nconst ActiveEvent = ({ activeEventId, classes, record, ...rest }) => {\n  return record.active_event.id == activeEventId ? (\n    <ChipField record={record} {...rest} />\n  ) : (\n    <TextField record={record} {...rest} />\n  );\n};\n\nActiveEvent.defaultProps = {\n  addLabel: true\n};\n\nexport default ActiveEvent;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport ImageEye from '@material-ui/icons/RemoveRedEye';\nimport { Link } from 'react-router-dom';\nimport { stringify } from 'qs';\n\nimport { Button } from 'react-admin';\n\nconst RelatedEvents = ({\n  basePath = '',\n  label = 'ra.action.show',\n  record = {},\n  ...rest\n}) => (\n  <Button\n    component={Link}\n    to={{\n      pathname: 'events',\n      search: stringify(\n        { filter: JSON.stringify({ group_id: record.id }) },\n        { strictNullHandling: true }\n      )\n    }}\n    label={label}\n    {...rest}\n  >\n    <ImageEye />\n  </Button>\n);\n\nRelatedEvents.propTypes = {\n  basePath: PropTypes.string,\n  label: PropTypes.string,\n  record: PropTypes.object\n};\n\n//const enhance =\n\nexport default RelatedEvents;\n","import React from 'react';\nimport { List, Datagrid, TextField, ShowButton } from 'react-admin';\n\nimport { WithEvent } from '../../components';\n\nimport ActiveEvent from './ActiveEvent';\nimport RelatedEvents from './RelatedEvents';\n\nconst CustomBulkActions = props => (\n  <React.Fragment>\n    <div>nothing here...</div>\n  </React.Fragment>\n);\n\nconst ViewList = props => (\n  <WithEvent>\n    {activeEventId => (\n      <List\n        actions={null}\n        bulkActionButtons={<CustomBulkActions />}\n        {...props}\n        perPage={200}\n        //filters={<Filters />}\n      >\n        <Datagrid>\n          <TextField source=\"id\" />\n\n          <TextField source=\"name\" />\n\n          <ActiveEvent\n            label=\"Active event\"\n            source=\"active_event.name\"\n            activeEventId={activeEventId}\n          />\n\n          <RelatedEvents label=\"Show events\" />\n\n          <ShowButton label=\"Details\" />\n        </Datagrid>\n      </List>\n    )}\n  </WithEvent>\n);\n\nexport default ViewList;\n","import React from 'react';\nimport {\n  Show,\n  ArrayField,\n  Datagrid,\n  SimpleShowLayout,\n  TextField,\n  DateField\n} from 'react-admin';\n\nimport { WithEvent } from '../../components';\n\nconst Title = ({ record }) => {\n  return <span>{record ? `${record.name} events` : ''}</span>;\n};\n\nconst ViewShow = props => (\n  <WithEvent>\n    {activeEventId => (\n      <Show title={<Title />} {...props}>\n        <SimpleShowLayout>\n          <ArrayField source=\"events\">\n            <Datagrid>\n              <TextField source=\"name\" />\n              <TextField source=\"loc\" />\n              <DateField source=\"starts\" showTime />\n              <DateField source=\"ends\" showTime />\n            </Datagrid>\n          </ArrayField>\n        </SimpleShowLayout>\n      </Show>\n    )}\n  </WithEvent>\n);\n\nexport default ViewShow;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { connect } from 'react-redux';\nimport Button from '@material-ui/core/Button';\nimport {\n  showNotification as showNotificationAction,\n  refreshView as refreshViewAction,\n  GET_ONE\n} from 'react-admin';\n//import { push as pushAction } from 'react-router-redux';\nimport dataProvider from '../../../api/httpClient';\n\nimport { changeEvent } from '../../../redux';\n\nclass ChangeAppScopeForEvent extends Component {\n  handleClick = () => {\n    const {\n      // push,\n      record,\n      showNotification,\n      refreshView,\n      changeEvent\n    } = this.props;\n\n    dataProvider(GET_ONE, 'events', { id: record.id })\n      .then(({ data }) => {\n        changeEvent(data);\n\n        showNotification('Event changed!', 'info');\n\n        refreshView();\n      })\n      .catch(e => {\n        console.error(e);\n        showNotification('Error when updating...', 'warning');\n      });\n  };\n\n  render() {\n    const { label, labelSelected, record, activeEventId } = this.props;\n\n    if (!record || !'id' in record || !record.id) {\n      return null;\n    }\n\n    return (\n      <Button\n        disabled={record.id === activeEventId ? true : false}\n        variant={record.id === activeEventId ? 'raised' : 'flat'}\n        color=\"primary\"\n        onClick={this.handleClick}\n      >\n        {record.id === activeEventId ? labelSelected : label}\n      </Button>\n    );\n  }\n}\n\nChangeAppScopeForEvent.defaultProps = {\n  label: 'Select',\n  labelSelected: 'Selected',\n  activeEventId: 0\n};\n\nChangeAppScopeForEvent.propTypes = {\n  push: PropTypes.func,\n  record: PropTypes.object,\n  showNotification: PropTypes.func,\n  activeEventId: PropTypes.number.isRequired\n};\n\nexport default connect(\n  null,\n  {\n    showNotification: showNotificationAction,\n    refreshView: refreshViewAction,\n    // push: pushAction,\n    changeEvent: changeEvent\n  }\n)(ChangeAppScopeForEvent);\n","import React from 'react';\nimport { SelectInput, crudGetList } from 'react-admin';\nimport { connect } from 'react-redux';\n\n//https://github.com/marmelab/react-admin/blob/6015670a863bef868a0cafcfb1706187609a6369/packages/ra-core/src/actions/dataActions.js\n\nclass FilterByGroupId extends React.Component {\n  componentWillMount() {\n    this.props.crudGetList(\n      'groups',\n      { page: 1, perPage: 1000 },\n      { field: 'id', order: 'ASC' },\n      {}\n    );\n  }\n\n  choices() {\n    const { data, list } = this.props.groups;\n\n    if (!'ids' in list || !Array.isArray(list.ids)) {\n      return [];\n    }\n\n    return list.ids.map(id => ({ id: data[id].id, name: data[id].name }));\n  }\n\n  render() {\n    return <SelectInput source=\"group_id\" choices={this.choices()} />;\n  }\n}\n\nFilterByGroupId.defaultProps = {\n  groups: {},\n  event: {}\n};\n\nexport default connect(\n  state => ({\n    event: state.app.event,\n    groups: state.admin.resources.groups\n  }),\n  { crudGetList }\n)(FilterByGroupId);\n","import React from 'react';\nimport { TextInput, SelectInput, Filter } from 'react-admin';\n\nimport FilterByGroupId from './FilterByGroupId';\n\nconst Filters = props => (\n  <Filter {...props}>\n    {/* <TextInput label=\"Search\" source=\"q\" alwaysOn />\n      <TextInput label=\"Title\" source=\"title\" defaultValue=\"Hello, World!\" /> */}\n\n    <FilterByGroupId alwaysOn />\n\n    {/* <SelectInput\n        source=\"tag\"\n        choices={[\n          { id: 'programming', name: 'Programming' },\n          { id: 'lifestyle', name: 'Lifestyle' },\n          { id: 'photography', name: 'Photography' }\n        ]}\n      /> */}\n  </Filter>\n);\n\nexport default Filters;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { connect } from 'react-redux';\nimport Button from '@material-ui/core/Button';\nimport {\n  showNotification as showNotificationAction,\n  refreshView as refreshViewAction,\n  GET_ONE\n} from 'react-admin';\n//import { push as pushAction } from 'react-router-redux';\nimport dataProvider from '../../../api/httpClient';\n\nimport { changeEvent } from '../../../redux';\n\n/*\n\nbasePath: \"/groups\"\nclasses: {root: \"ShowActions-root-53\"}\ndata: undefined\nhasCreate: false\nhasEdit: false\nhasList: true\nhasShow: true\nhistory: {length: 50, action: \"POP\", location: {…}, createHref: ƒ, push: ƒ, …}\nid: \"23\"\nlocation: {pathname: \"/groups/23/show\", search: \"\", hash: \"\", state: undefined}\nmatch: {path: \"/groups/:id/show\", url: \"/groups/23/show\", isExact: true, params: {…}}\noptions: {label: \"Events\"}\npermissions: null\nresource: \"groups\"\n\n*/\n\nclass SelectAll extends Component {\n  handleClick = () => {\n    const { groupId, showNotification, refreshView, changeEvent } = this.props;\n\n    alert(groupId);\n\n    return;\n\n    dataProvider(GET_ONE, 'groups', { groupId })\n      .then(({ data }) => {\n        changeEvent(data);\n\n        showNotification('Event changed!', 'info');\n\n        refreshView();\n      })\n      .catch(e => {\n        console.error(e);\n        showNotification('Error when updating...', 'warning');\n      });\n  };\n\n  render() {\n    const { label, labelSelected, groupId } = this.props;\n\n    return (\n      <Button\n        //disabled={record.id === activeEventId ? true : false}\n        //variant={record.id === activeEventId ? 'raised' : 'flat'}\n        color=\"primary\"\n        onClick={this.handleClick}\n      >\n        {label}\n      </Button>\n    );\n  }\n}\n\nSelectAll.defaultProps = {\n  label: 'Select All',\n  labelSelected: 'Selected',\n  groupId: 0\n};\n\nSelectAll.propTypes = {\n  showNotification: PropTypes.func,\n  refreshView: PropTypes.func\n  //  groupId : PropTypes.number.isRequired\n};\n\nexport default connect(\n  null,\n  {\n    showNotification: showNotificationAction,\n    refreshView: refreshViewAction,\n    // push: pushAction,\n    changeEvent: changeEvent\n  }\n)(SelectAll);\n","import React from 'react';\nimport { TextField } from 'react-admin';\nimport { withStyles } from '@material-ui/core/styles';\n\nconst styles = {\n  active: {\n    fontWeight: 700\n  },\n  notActive: {}\n};\n\nconst ActiveEvent = ({ classes, record, ...rest }) => (\n  <TextField\n    className={record.is_active ? classes.active : classes.notActive}\n    record={record}\n    {...rest}\n  />\n);\n\nActiveEvent.defaultProps = {\n  addLabel: true\n};\n\nexport default withStyles(styles)(ActiveEvent);\n","import React from 'react';\nimport {\n  List,\n  Datagrid,\n  TextField,\n  ShowButton,\n  DateField,\n  ReferenceField,\n  ChipField\n} from 'react-admin';\n\nimport { WithEvent } from '../../components';\n\nimport ChangeAppScope from './actions/ChangeAppScope';\nimport ListFilters from './ListFilters';\nimport SelectAll from './actions/SelectAll';\nimport ActiveEvent from './ActiveEvent';\n\nconst CustomBulkActions = props => (\n  <React.Fragment>\n    <SelectAll {...props} />\n  </React.Fragment>\n);\n\nconst ViewList = props => (\n  <WithEvent>\n    {activeEventId => (\n      <List\n        actions={null}\n        filters={<ListFilters />}\n        bulkActionButtons={<CustomBulkActions />}\n        {...props}\n        perPage={200}\n      >\n        <Datagrid>\n          <ActiveEvent source=\"name\" />\n\n          <TextField source=\"loc\" />\n          <DateField source=\"starts\" showTime />\n\n          <ReferenceField\n            label=\"Items sold\"\n            reference=\"performance\"\n            source=\"id\"\n            linkType={false}\n          >\n            <ChipField source=\"amount\" sortable={false} />\n          </ReferenceField>\n\n          <ChangeAppScope activeEventId={activeEventId} />\n\n          <ShowButton label=\"Summary\" />\n        </Datagrid>\n      </List>\n    )}\n  </WithEvent>\n);\n\nexport default ViewList;\n","// in src/comments/ApproveButton.js\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport Button from '@material-ui/core/Button';\nimport {\n  showNotification as showNotificationAction,\n  refreshView as refreshViewAction,\n  UPDATE\n} from 'react-admin';\n//import { push as pushAction } from 'react-router-redux';\nimport dataProvider from '../../../api/httpClient';\n\nclass ChangeActiveEventButton extends Component {\n  handleClick = () => {\n    /*\n        basePath,\n        push\n        record\n        resource,\n        showNotification\n        */\n\n    console.log(this.props);\n\n    const {\n      //push,\n      record,\n      showNotification,\n      refreshView,\n      resource\n    } = this.props;\n\n    dataProvider(UPDATE, resource, {\n      id: record.group_id,\n      data: {\n        active_event_id: record.id\n      }\n    })\n      .then(({ data }) => {\n        showNotification('Active event changed!', 'info');\n        refreshView();\n      })\n      .catch(e => {\n        console.error(e);\n        showNotification('Error', 'warning');\n      });\n  };\n\n  render() {\n    console.log(this.props);\n\n    const { label, labelSelected, record } = this.props;\n\n    const selected = !!+record.is_active;\n\n    return (\n      <Button\n        disabled={selected}\n        variant={selected ? 'raised' : 'outlined'}\n        color=\"primary\"\n        onClick={this.handleClick}\n      >\n        {selected ? labelSelected : label}\n      </Button>\n    );\n  }\n}\n\nChangeActiveEventButton.defaultProps = {\n  label: 'Set Active',\n  labelSelected: 'Active',\n  id: 0\n};\n\nChangeActiveEventButton.propTypes = {\n  push: PropTypes.func,\n  id: PropTypes.number,\n  showNotification: PropTypes.func\n};\n\nexport default connect(\n  null,\n  {\n    showNotification: showNotificationAction,\n    refreshView: refreshViewAction\n    //    push: pushAction,\n  }\n)(ChangeActiveEventButton);\n","import React from 'react';\nimport {\n  Show,\n  ArrayField,\n  Datagrid,\n  SimpleShowLayout,\n  TextField,\n  DateField,\n  ListButton\n} from 'react-admin';\n\nimport CardActions from '@material-ui/core/CardActions';\nimport { WithEvent } from '../../components';\nimport ChangeActiveEventButton from './actions/ChangeActiveEventButton';\n\nconst Title = ({ record }) => {\n  return <span>{record ? `${record.name}` : ''}</span>;\n};\n\nconst Actions = ({ basePath, ...props }) => (\n  <CardActions>\n    <ListButton basePath={basePath} />\n    {/* <ChangeActiveEventButton {...props} /> */}\n  </CardActions>\n);\n\nconst ViewShow = props => (\n  <WithEvent>\n    {activeEventId => (\n      <Show\n        title={<Title />}\n        actions={<Actions activeEventId={activeEventId} />}\n        {...props}\n      >\n        <SimpleShowLayout>\n          <TextField source=\"name\" />\n          <TextField source=\"loc\" />\n          <TextField source=\"starts\" showTime />\n          <TextField source=\"ends\" showTime />\n\n          {/* <ArrayField source=\"events\">\n          <Datagrid>\n\n          </Datagrid>\n        </ArrayField> */}\n        </SimpleShowLayout>\n      </Show>\n    )}\n  </WithEvent>\n);\n\nexport default ViewShow;\n","import React from 'react';\nimport { Edit, SimpleForm, TextField, TextInput } from 'react-admin';\n\nimport Chip from '@material-ui/core/Chip';\nimport get from 'lodash/get';\n\nconst Title = ({ record }) => {\n  return (\n    <span>{record ? `${get(record, 'company.profile.name')}` : null}</span>\n  );\n};\n\nconst redirect = (basePath, id, data) => `/companies/${data.company_id}/show`;\n\nconst ViewShow = props => (\n  <Edit title={<Title />} {...props}>\n    <SimpleForm redirect={redirect}>\n      <TextField source=\"name\" />\n      <TextInput source=\"value\" />\n    </SimpleForm>\n  </Edit>\n);\n\nexport default ViewShow;\n","import React from 'react';\nimport { Show, TextField } from 'react-admin';\n\nconst Title = ({ record }) => {\n  return <span>{record ? record.value : ''}</span>;\n};\n\nconst ViewShow = props => (\n  <Show title={<Title />} {...props}>\n    <TextField source=\"value\" />\n  </Show>\n);\n\nexport default ViewShow;\n","import React from 'react';\nimport { Edit, SimpleForm, TextField, TextInput } from 'react-admin';\n\nimport get from 'lodash/get';\n\nconst Title = ({ record }) => {\n  return <span>{record ? `${get(record, 'participant.email')}` : ''}</span>;\n};\n\nconst redirect = (basePath, id, data) =>\n  `/participants/${data.participant_id}/show`;\n\nconst ViewShow = props => (\n  <Edit title={<Title />} {...props}>\n    <SimpleForm redirect={redirect}>\n      <TextField source=\"name\" />\n      <TextInput source=\"value\" />\n    </SimpleForm>\n  </Edit>\n);\n\nexport default ViewShow;\n","import React from 'react';\nimport { SelectInput, crudGetList } from 'react-admin';\nimport { connect } from 'react-redux';\n\n//https://github.com/marmelab/react-admin/blob/6015670a863bef868a0cafcfb1706187609a6369/packages/ra-core/src/actions/dataActions.js\n\nclass FilterByTicketId extends React.Component {\n  componentWillMount() {\n    this.props.crudGetList(\n      'tickets',\n      { page: 1, perPage: 100 },\n      { field: 'id', order: 'ASC' },\n      { event_id: this.props.event.id }\n    );\n  }\n\n  buildTicketList() {\n    const { data, list } = this.props.tickets;\n\n    if (!'ids' in list || !Array.isArray(list.ids)) {\n      return [];\n    }\n\n    return list.ids.map(id => ({ id: data[id].id, name: data[id].name }));\n  }\n\n  render() {\n    return <SelectInput source=\"ticket_id\" choices={this.buildTicketList()} />;\n  }\n}\n\nFilterByTicketId.defaultProps = {\n  tickets: {},\n  event: {}\n};\n\nexport default connect(\n  state => ({\n    event: state.app.event,\n    tickets: state.admin.resources.tickets\n  }),\n  { crudGetList }\n)(FilterByTicketId);\n","import React from 'react';\nimport {\n  List,\n  Datagrid,\n  Edit,\n  Create,\n  SimpleForm,\n  DateField,\n  TextField,\n  ChipField,\n  ShowButton,\n  DisabledInput,\n  TextInput,\n  SelectInput,\n  Filter\n} from 'react-admin';\nimport { ReferenceArrayField, SingleFieldList } from 'react-admin';\nimport {\n  SetStatusAction,\n  SendMessageAction,\n  WithEvent\n} from '../../components';\nimport activeEventId from '../../api/app';\nimport FilterByUserId from './FilterByUserId';\n\nconst Filters = props => (\n  <Filter {...props}>\n    <TextInput label=\"Search\" source=\"q\" alwaysOn />\n    <TextInput label=\"Title\" source=\"title\" defaultValue=\"Hello, World!\" />\n\n    <FilterByUserId alwaysOn />\n\n    <SelectInput\n      source=\"tag\"\n      choices={[\n        { id: 'programming', name: 'Programming' },\n        { id: 'lifestyle', name: 'Lifestyle' },\n        { id: 'photography', name: 'Photography' }\n      ]}\n    />\n  </Filter>\n);\n\nconst CustomBulkActions = props => (\n  <React.Fragment>\n    <SetStatusAction label=\"Change status\" {...props} />\n    <SendMessageAction label=\"Send e-mail message\" {...props} />\n  </React.Fragment>\n);\n\nconst ViewList = props => (\n  <WithEvent>\n    {activeEventId => (\n      <List\n        {...props}\n        perPage={100}\n        filters={<Filters />}\n        filter={{ event_id: activeEventId }}\n        bulkActionButtons={<CustomBulkActions />}\n      >\n        <Datagrid>\n          <TextField source=\"email\" />\n          <TextField source=\"status\" />\n\n          <ReferenceArrayField\n            label=\"Roles\"\n            reference=\"tickets\"\n            source=\"ticket_ids\"\n          >\n            <SingleFieldList>\n              <ChipField source=\"role\" />\n            </SingleFieldList>\n          </ReferenceArrayField>\n\n          <DateField source=\"created_at\" showTime />\n          <TextField source=\"amount\" />\n          <ShowButton />\n        </Datagrid>\n      </List>\n    )}\n  </WithEvent>\n);\n\nexport default ViewList;\n","import React from 'react';\nimport {\n  Show,\n  ArrayField,\n  Datagrid,\n  SimpleShowLayout,\n  TabbedShowLayout,\n  Tab,\n  TextField,\n  DateField,\n  EditButton,\n  ChipField,\n  ReferenceManyField,\n  NumberField\n} from 'react-admin';\n// import ActiveEventButton from './ActiveEventButton';\n// import ActiveEventChipField from './ActiveEventChipField';\n\nimport PurchaseStatusField from '../purchases/PurchaseStatusField';\n\nimport Chip from '@material-ui/core/Chip';\n\nimport get from 'lodash/get';\n\nconst Title = ({ record }) => {\n  return (\n    <span>\n      {record\n        ? `${get(record, 'fields.fname')} ${get(record, 'fields.lname')} ${\n            record.email\n          }`\n        : ''}\n    </span>\n  );\n};\n\nconst Roles = ({ record }) => (\n  <div>\n    {record &&\n      'roles' in record &&\n      record.roles.map(role => <Chip key={role} label={role} />)}\n  </div>\n);\n\nRoles.defaultProps = { addLabel: true };\n\nconst ProfileFields = ({ record }) =>\n  // <ul>{Object.keys(record.fields).map(key => <li key={key}>{record.fields[key]}</li>)}</ul>\n\n  null;\n\nProfileFields.defaultProps = { addLabel: true };\n\nconst ViewShow = props => (\n  <Show title={<Title />} {...props}>\n    <TabbedShowLayout>\n      <Tab label=\"summary\">\n        <Roles source=\"roles\" />\n\n        <ReferenceManyField\n          reference=\"fields\"\n          target=\"participant_id\"\n          label=\"Profile data\"\n        >\n          <Datagrid>\n            <TextField source=\"name\" />\n            <TextField source=\"value\" />\n            <EditButton />\n          </Datagrid>\n        </ReferenceManyField>\n\n        <ProfileFields source=\"fields\" />\n\n        <TextField label=\"Id\" source=\"id\" />\n        <TextField source=\"title\" />\n        <TextField source=\"teaser\" />\n      </Tab>\n\n      <Tab label=\"related\" path=\"related\">\n        <ReferenceManyField\n          reference=\"related\"\n          target=\"participant_id\"\n          label=\"Profile data\"\n        >\n          <Datagrid>\n            <TextField source=\"name\" />\n            <TextField source=\"value\" />\n            <EditButton />\n          </Datagrid>\n        </ReferenceManyField>\n      </Tab>\n\n      <Tab label=\"Purchases\" path=\"purchases\">\n        <ArrayField source=\"purchases\">\n          <Datagrid>\n            <DateField source=\"created_at\" />\n            <PurchaseStatusField source=\"status\" />\n            <NumberField source=\"amount\" />\n          </Datagrid>\n        </ArrayField>\n\n        <TextField\n          label=\"Password (if protected post)\"\n          source=\"password\"\n          type=\"password\"\n        />\n        <DateField label=\"Publication date\" source=\"published_at\" />\n        {/* <NumberField source=\"average_note\" /> */}\n        {/* <BooleanField label=\"Allow comments?\" source=\"commentable\" defaultValue /> */}\n        <TextField label=\"Nb views\" source=\"views\" />\n      </Tab>\n      <Tab label=\"comments\" path=\"comments\">\n        <ReferenceManyField\n          reference=\"comments\"\n          target=\"participant_id\"\n          addLabel={false}\n        >\n          <Datagrid>\n            <TextField source=\"body\" />\n            <DateField source=\"created_at\" />\n            <EditButton />\n          </Datagrid>\n        </ReferenceManyField>\n      </Tab>\n    </TabbedShowLayout>\n  </Show>\n);\n\nexport default ViewShow;\n","import React from 'react';\nimport { Admin, Resource } from 'react-admin';\n\nimport dataProvider from './api/httpClient';\nimport authProvider from './api/authClient';\nimport { customReducers, customSagas } from './redux';\nimport { AppTitle, MyLayout } from './components';\nimport customRoutes from './customRoutes';\n\nimport { CompanyList, CompanyShow } from './endpoints/companies';\nimport { PurchaseList } from './endpoints/purchases';\nimport { ParticipantList, ParticipantShow } from './endpoints/participants';\nimport { TicketList, TicketEdit } from './endpoints/tickets';\nimport { TicketGroupList } from './endpoints/ticketgroups';\nimport { GroupList, GroupShow } from './endpoints/groups';\nimport { EventList, EventShow } from './endpoints/events';\nimport { CompanyDataEdit, CompanyDataShow } from './endpoints/companydata';\nimport { FieldsEdit } from './endpoints/fields';\nimport { MessagesList, MessagesShow } from './endpoints/messages';\n\nimport { activeEventId, lsGet } from './api/app';\n\nexport const canAccess = (permissions, resource) => {\n  if (!activeEventId() && resource !== 'groups') {\n    return false;\n  }\n\n  return true;\n};\n\nclass App extends React.Component {\n  render() {\n    return (\n      <Admin\n        //      title={<AppTitle />}\n        appLayout={MyLayout}\n        customReducers={customReducers}\n        customSagas={customSagas}\n        customRoutes={customRoutes}\n        authProvider={authProvider}\n        dataProvider={dataProvider}\n        initialState={{\n          app: {\n            event: lsGet('activeEvent') || {}\n          }\n        }}\n      >\n        {permissions => [\n          <Resource\n            name=\"purchases\"\n            // options={{ label: 'Purchases' }}\n            list={canAccess(permissions, 'purchases') ? PurchaseList : null}\n          />,\n\n          <Resource\n            name=\"participants\"\n            options={{ label: 'Registrations' }}\n            list={\n              canAccess(permissions, 'participants') ? ParticipantList : null\n            }\n            show={\n              canAccess(permissions, 'participants') ? ParticipantShow : null\n            }\n          />,\n\n          <Resource\n            name=\"companies\"\n            list={canAccess(permissions, 'companies') ? CompanyList : null}\n            show={canAccess(permissions, 'companies') ? CompanyShow : null}\n          />,\n\n          <Resource\n            name=\"reports\"\n            list={canAccess(permissions, 'reports') ? PurchaseList : null}\n          />,\n\n          <Resource\n            name=\"settings\"\n            list={canAccess(permissions, 'settings') ? PurchaseList : null}\n          />,\n\n          <Resource\n            name=\"texts\"\n            list={canAccess(permissions, 'texts') ? PurchaseList : null}\n          />,\n\n          <Resource\n            name=\"feed\"\n            options={{ label: 'Feed' }}\n            list={canAccess(permissions, 'feed') ? PurchaseList : null}\n          />,\n\n          <Resource\n            name=\"tickets\"\n            list={canAccess(permissions, 'tickets') ? TicketList : null}\n            edit={canAccess(permissions, 'tickets') ? TicketEdit : null}\n          />,\n\n          <Resource\n            name=\"ticketgroups\"\n            list={\n              canAccess(permissions, 'ticketgroups') ? TicketGroupList : null\n            }\n          />,\n\n          <Resource\n            name=\"groups\"\n            list={canAccess(permissions, 'groups') ? GroupList : null}\n            show={canAccess(permissions, 'groups') ? GroupShow : null}\n            options={{ label: 'Projects' }}\n          />,\n\n          <Resource\n            name=\"messages\"\n            list={canAccess(permissions, 'messages') ? MessagesList : null}\n            show={canAccess(permissions, 'messages') ? MessagesShow : null}\n          />,\n\n          <Resource\n            name=\"fields\"\n            edit={canAccess(permissions, 'fields') ? FieldsEdit : null}\n          />,\n\n          <Resource\n            name=\"companydata\"\n            edit={\n              canAccess(permissions, 'companydata') ? CompanyDataEdit : null\n            }\n            show={\n              canAccess(permissions, 'companydata') ? CompanyDataShow : null\n            }\n          />,\n\n          <Resource name=\"related\" />,\n\n          <Resource\n            name=\"events\"\n            list={canAccess(permissions, 'events') ? EventList : null}\n            show={canAccess(permissions, 'events') ? EventShow : null}\n          />,\n\n          <Resource name=\"comments\" />,\n\n          <Resource name=\"templates\" />,\n\n          <Resource name=\"messages\" />,\n\n          <Resource name=\"admins\" />\n        ]}\n      </Admin>\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\nregisterServiceWorker();\n"],"sourceRoot":""}